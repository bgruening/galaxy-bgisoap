<tool id="kmerfreq1_wrapper" name="KmerFreq1" version="0.1">
    <description>- a kmer frequency counter</description>
    <requirements>
        <requirement type="package" version="1.0">soapec</requirement>
    </requirements>
    <command interpreter="python">
        kmerfreq1_wrapper.py

        --format_of_data=$data_format.fastq_fasta
        #if $data_format.fastq_fasta == "fastq"
        #for $i in $data_format.libraries
        --paired_fastq_input1=$i.input1
        --paired_fastq_input2=$i.input2
        #end for
        #else
        #for $i in $data_format.libraries
        --paired_fasta_input1=$i.input1
        --paired_fasta_input2=$i.input2
        #end for
        #end if

        --seed_length=$seed_length
        --ascii_shift=$ascii_shift
        --cutoff=$cutoff
        --output_kmer_index=$output_kmer_index

        ## Output files
        --filelist=$filelist
        --stat=$stat
        --freq=$freq

    </command>
    <inputs>
        <conditional name="data_format">
            <param name="fastq_fasta"
                   type="select"
                   label="What type of data are you using?">
                <option value="fastq">FASTQ</option>
                <option value="fasta">FASTA</option>
            </param>
            <when value="fastq">
                <repeat name="libraries" title="libraries" min="1">
                    <param name="input1"
                           type="data"
                           format="input"
                           label="Forward FASTQ file">
                    </param>
                    <param name="input2"
                           type="data"
                           format="input"
                           label="Reverse FASTQ file">
                    </param>
                </repeat>
            </when>
            <when value="fasta">
                <repeat name="libraries" title="libraries" min="1">
                    <param name="input1"
                           type="data"
                           format="input"
                           label="Forward FASTA file">
                    </param>
                    <param name="input2"
                           type="data"
                           format="input"
                           label="Reverse FASTA file">
                    </param>
                </repeat>
            </when>
        </conditional>
        <param name="seed_length"
            type="integer"
            value="13"
            label="Seed length"
            help="Seed length should be set between 13 and 27"/>
        <param name="ascii_shift"
               type="select"
               value="33"
               label="ASCII shift of the quality value"
               help="Usually 64 or 33 for Illumina data">
            <option value="33">33</option>
            <option value="64">64</option>
        </param>
        <param name="cutoff"
                type="integer"
                value="0"
                label="Quality cutoff"/>
        <param name="output_kmer_index"
                type="select"
                label="Output Kmer index">
            <option value="1">Yes</option>
	        <option value="0">No</option>
        </param>
    </inputs>
    <outputs>
        <data name="filelist" format="Tabular" label="kmeqfreq.infiles"/>
        <data name="stat" format="Tabular" label="kmerfreq.stat"/>
        <data name="freq" format="Tabular" label="kmerfreq.freq"/>
    </outputs>
    <tests>
        <test>
            <param name="fastq_fasta" value="fastq"/>
            <param name="input1" value="phiX174/Illumina_90bp2000IS10X/Illumina_90bp2000IS10X_1.fq"/>
            <param name="input2" value="phiX174/Illumina_90bp2000IS10X/Illumina_90bp2000IS10X_2.fq"/>
            <param name="seed_length" value="13"/>
            <param name="ascii_shift" value="33"/>
            <param name="cutoff" value="0"/>
            <param name="output_kmer_index" value="1"/>
            <output name="stat">
                <assert_contents>
                    <has_line line="kmer frequence statistic" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
**What it does**

KmerFreq is one of two programs which is used to correct sequencing errors based
on the kmer frequency spectrum (KFS). Since it assumes that most low frequency
Kmers  have been generated by sequencing errors, the key to its error correction
functionality is to distinguish the rate of low and high frequency Kmers.
The use of larger Kmer sizes provides better results but conversely requires
more computing resources. In order to produce a more accurate result, the
trimmed length and deletion ratio is balanced with the accuracy level. A
practical Kmer size should be chosen based on the genome characteristic.

Note that 30X data is preferred for calculation of the Kmer frequency spectrum.

When kmer size is less than 17 bp, this KmerFreq_AR tool and Corrector_AR should
be used because it will be faster than using the HA versions. Memory usage will
also be less than 16 GB (15mer, 1G; 16mer, 4G; 17mer, 16G) for KFS construction.
Also, KmerFreq_AR supports space-kmer in KFS construction and Corrector_AR
supports Duo-kmer (consecutive and space kmer) in the correction process.

When kmer sizes larger than 17bp are to be processed, the HA versions of
KmerFreq and Corrector should be used since less memory is required for KFS
construction.

-----

**Outputs**

Two output files are generated by KmerFreq:

1. freq.stat
2. freq.cz
3. freq.cz.len
    </help>
</tool>


