<tool id="corrector" name="Corrector1" version="0.1">
    <description>- corrects sequencing errors in short reads</description>
    <requirements>
        <requirement type="package" version="1.0">soapec</requirement>
    </requirements>
    <command interpreter="python">
        corrector1_wrapper.py

        ##Inputs
        --filelist=$filelist
        --freq=$freq

        --kmer_index=$kmer_index
        --start_cutoff=$start_cutoff
        --end_cutoff=$end_cutoff
        --delta=$delta
        --seed_length=$seed_length
        --file_format=$file_format

        ##Outputs for forward and reverse files
        --corrected_forward=$corrected_forward
        --corrected_reverse=$corrected_reverse
        --corr_filelist=$corr_filelist
    </command>
    <inputs>
        <param name="filelist" type="data" format="input" label="List of input files"/>
        <param name="freq" type="data" format="input" label="Kmer frequency data"/>
        <param name="kmer_index"
               type="select"
               value="0"
               label="Kmer index">
            <option value="0">No</option>
            <option value="1">Yes</option>
        </param>
        <param name="start_cutoff"
               type="integer"
               value="3"
               label="Start of Kmer frequency cutoff"/>
        <param name="end_cutoff"
               type="integer"
               value="3"
               label="End of Kmer frequency cutoff"/>
        <param name="delta"
               type="integer"
               value="3"
               label="Delta value"/>
        <param name="seed_length"
               type="integer"
               value="3"
               label="Seed length"/>
        <param name="file_format"
               type="select"
               value="0"
               label="Input file format">
            <option value="1">FASTQ</option>
            <option value="2">FASTA</option>
        </param>
    </inputs>
    <outputs>
        <!-- Deal with output formats dependent on input values -->
        <data name="corrected_forward"
              format="fastq"
              label="corr.forward.reads">
            <change_format>
                <when input="file_format" value="2" format="fasta" />
            </change_format>
        </data>
        <data name="corrected_reverse"
              format="fastq"
              label="corr.reverse.reads">
            <change_format>
                <when input="file_format" value="2" format="fasta" />
            </change_format>
        </data>
        <data name="corr_filelist"
              format="Tabular"
              label="corr.filelist">
        </data>
    </outputs>
    <tests>
        <test>
            <param name="filelist" value="filelist.txt"/>
            <param name="freq" value="kmerfreq.freq"/>
            <param name="kmer_index" value="0"/>
            <param name="start_cutoff" value="3"/>
            <param name="end_cutoff" value="3"/>
            <param name="delta" value="3"/>
            <param name="seed_length" value="3"/>
            <param name="file_format" value="1"/>
            <output name="corr_filelist">
                <assert_contents>
                    <has_line line="database" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
**What it does**

Corrector is one of two programs which is used to correct sequencing errors
based on the kmer frequency spectrum (KFS). Since it assumes that most low
frequency kmers have been generated by sequencing errors, the key to its error
correction functionality is to distinguish the rate of the low and high
frequency kmers. The use of larger Kmer sizes provides better results but
conversely is more computationally intensive. In order to produce a more
accurate result, the trimmed length and deletion ratio is balanced with the
accuracy level. A practical kmer size should be chosen based on the size of the
genome.

Note that 30X data is preferred for calculation of the kmer frequency spectrum.

When kmer size is less than 17 bp, KmerFreq AR and Corrector AR should be used
because the processing will be faster than using HA versions. Memory usage
will also be less than 16GB (15mer, 1G; 16mer, 4G; 17mer, 16G) for KFS
construction. Also, KmerFreq AR supports space-kmer in KFS construction and
Corrector AR supports Duo-kmer (consecutive and space kmer) in the correction
process.

When kmer sizes larger than 17bp are to be processed, the HA versions of
KmerFreq and Corrector should be used since less memory is required for KFS
construction.

-----

**Outputs**

Each lane will generate two pair.fq files containing pair-end reads and one
single.fq file containing single-end reads. If Corrector HA has been configured
not to process single-end reads, this file will not be present. Finally, one
pair.single.stat file containing statistical information will be produced.

For each read file, there is one cor.stat file containing statistical
information for each file.

For each reads list file, there is one QC.xls file, containing quality control
information.

-----

**Memory usage**

Memory usage is related to the number of high frequency (greater than low
frequency cutoff) kmer species. The peak value of memory usage can be estimated
roughly by this formula: HighFreqKmerSpeciesNumber * 8 Byte.

-----

**Further information**

When calculating the KFS, 30X data is preferred.

Remember that the ASCII shift of quality default value (Quality_shift -Q) is 64.
You should check the file and make sure this option is correctly set.

Low-frequency kmers regions will be interpreted as sequencing errors, and will
be  corrected or removed in the final result. However, the whole genome shotgun
sequencing will generate random reads across the genome, and some regions will
have very low coverage. These regions will be removed. You should consider what
this effect may have on your data when interpreting the final assembly.
    </help>
</tool>



